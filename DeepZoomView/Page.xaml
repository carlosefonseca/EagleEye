<UserControl xmlns:dataInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.Input"
    x:Class="DeepZoomView.Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:my="clr-namespace:DeepZoomView.Controls"
    >
    <UserControl.Resources>

        <ControlTemplate x:Key="ButtonTemplate">
            <Border x:Name="RootElement" CornerRadius="5" Padding="3,0,3,0" Margin="0" BorderThickness="2" BorderBrush="#555" HorizontalAlignment="Stretch" MinWidth="24" Height="24">
                <Border.Resources>
                    <LinearGradientBrush x:Key="CheckedStyle" StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#e0ecf5" Offset="0.1"/>
                        <GradientStop Color="#75abd8" Offset="0.9"/>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="PressedStyle" StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#e0ecf5" Offset="0.1"/>
                        <GradientStop Color="#FFFFFF" Offset="0.9"/>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="OverStyle" StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#FFFFFF" Offset="0.1"/>
                        <GradientStop Color="#E0ECF5" Offset="0.9"/>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="OffStyle" StartPoint="0,0" EndPoint="0,1" Opacity="0.5">
                        <GradientStop Color="#FFF" Offset="0.1"/>
                        <GradientStop Color="#C0C0C0" Offset="0.9"/>
                    </LinearGradientBrush>
                </Border.Resources>

                <VisualStateManager.VisualStateGroups>

                    <!--Define the states for the common states. The states in the VisualStateGroup are mutually exclusive to each other.-->
                    <VisualStateGroup x:Name="CommonStates">

                        <!--The Normal state is the state the button is in when it is not in another state from this VisualStateGroup.-->
                        <VisualState x:Name="Normal" />

                        <VisualState x:Name="MouseOver">
                            <Storyboard Duration="0">
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(UIElement.Background)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource OverStyle}"></DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="Pressed">
                            <Storyboard Duration="0">
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(UIElement.Background)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource PressedStyle}"></DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(UIElement.Background)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource CheckedStyle}"></DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(UIElement.Background)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource OffStyle}"></DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>

                </VisualStateManager.VisualStateGroups>

                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#FFF" Offset="0.1"/>
                        <GradientStop Color="#C0C0C0" Offset="0.9"/>
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
        </ControlTemplate>


        <ControlTemplate x:Key="zoomInTemplate" TargetType="Button">
            <Grid>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Unfocused"/>
                        <vsm:VisualState x:Name="Focused"/>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Normal"/>
                        <vsm:VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Disabled"/>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Image Height="26" x:Name="normal" Width="26" Source="Images/zoomin_rest.png" Stretch="Fill"/>
                <Image Height="26" x:Name="down" Width="26" Opacity="0" Source="Images/zoomin_pressed.png" Stretch="Fill"/>
                <Image Height="26" x:Name="hover" Width="26" Opacity="0" Source="Images/zoomin_hover.png" Stretch="Fill"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="zoomOutTemplate" TargetType="Button">
            <Grid>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Unfocused"/>
                        <vsm:VisualState x:Name="Focused"/>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Normal"/>
                        <vsm:VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Disabled"/>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Image Height="26" x:Name="normal" Width="26" Source="Images/zoomout_rest.png" Stretch="Fill"/>
                <Image Height="26" x:Name="down" Width="26" Opacity="0" Source="Images/zoomout_pressed.png" Stretch="Fill"/>
                <Image Height="26" x:Name="hover" Width="26" Opacity="0" Source="Images/zoomout_hover.png" Stretch="Fill"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="homeTemplate" TargetType="Button">
            <Grid>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Unfocused"/>
                        <vsm:VisualState x:Name="Focused"/>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Normal"/>
                        <vsm:VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Disabled"/>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Image Height="26" x:Name="normal" Width="26" Source="Images/home_rest.png" Stretch="Fill"/>
                <Image Height="26" x:Name="down" Width="26" Opacity="0" Source="Images/home_pressed.png" Stretch="Fill"/>
                <Image Height="26" x:Name="hover" Width="26" Opacity="0" Source="Images/home_hover.png" Stretch="Fill"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="fullScreenTemplate" TargetType="Button">
            <Grid>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Unfocused"/>
                        <vsm:VisualState x:Name="Focused"/>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Normal"/>
                        <vsm:VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="down" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Disabled"/>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>
                <Image Height="26" x:Name="normal" Width="26" Source="Images/fullscreen_rest.png" Stretch="Fill"/>
                <Image Height="26" x:Name="down" Width="26" Opacity="0" Source="Images/fullscreen_pressed.png" Stretch="Fill"/>
                <Image Height="26" x:Name="hover" Width="26" Opacity="0" Source="Images/fullscreen_hover.png" Stretch="Fill"/>

            </Grid>
        </ControlTemplate>
    </UserControl.Resources>
    
    
    <Grid x:Name="LayoutRoot" Background="Black" Width="Auto" Height="Auto" MouseEnter="EnterMovie" MouseLeave="LeaveMovie" MinWidth="640" MinHeight="480">
        <vsm:VisualStateManager.VisualStateGroups>
            <vsm:VisualStateGroup x:Name="FadeButtons">
                <vsm:VisualStateGroup.Transitions>
                    <vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="FadeIn">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="buttonCanvas" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="FadeOut"/>
            </vsm:VisualStateGroup>
        </vsm:VisualStateManager.VisualStateGroups>

        <ListBox x:Name="SearchFieldAutocomplete" Visibility="Collapsed" />

        <Grid Name="RootGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Canvas Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Background="Black" Canvas.ZIndex="100"></Canvas>



            <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Canvas.ZIndex="1000">
                <StackPanel x:Name="WithoutMetadata" Orientation="Horizontal" >
                    <Button x:Name="load" Content="Load Metadata" Template="{StaticResource ButtonTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="7" Margin="0,0,10,0" Click="LoadMetadata"></Button>
                    <TextBlock Text="Please select the &quot;collection.xml&quot; file that corresponds to this image collection" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"></TextBlock>
                </StackPanel>


                <!-- TOOL BAR -->
                <StackPanel x:Name="WithMetadata" Orientation="Horizontal" Visibility="Collapsed">

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="History" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"></TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <my:SegmentedControlIndependentButtons x:Name="backForwardBtn" VerticalAlignment="Center" Margin="0,0,10,0" />
                            <Button x:Name="SavedStateBtn" Template="{StaticResource ButtonTemplate}" Content="Saved State" VerticalAlignment="Center" Margin="0,0,10,0" />
                        </StackPanel>

                    </StackPanel>

                    <Rectangle Fill="Silver" Height="40" Width="1" VerticalAlignment="Stretch" Margin="0,0,10,0"/>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Display:" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"></TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <my:SegmentedControl x:Name="DisplayOptionsButtons" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,10,0"/>
                            <ToggleButton x:Name="showgroups" Template="{StaticResource ButtonTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0"
                                                                                Click="showgroups_Click" Content="Group Names" IsThreeState="False" />
                        </StackPanel>
                    </StackPanel>

                    <Rectangle Fill="Silver" Height="40" Width="1" VerticalAlignment="Stretch" Margin="0,0,10,0"/>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Filter:" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"></TextBlock>

                        <StackPanel Orientation="Horizontal">
                            <my:FilterBar x:Name="SearchField" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" Width="300" KeyDown="SearchField_KeyDown"/>
                            <my:SelectionChooser x:Name="selectionsButton" VerticalAlignment="Center" Margin="0,0,10,0" />
                            <Button x:Name="Apply" Template="{StaticResource ButtonTemplate}" Content="Apply Filter!" VerticalAlignment="Center" Click="Apply_Click" />
                        </StackPanel>

                    </StackPanel>
                </StackPanel>

            </StackPanel>



            <!--<MultiScaleImage x:Name="msi" Grid.Row="1" Grid.Column="1" Source="Z:/collection.xml" Canvas.ZIndex="0"/>-->
            <!--<MultiScaleImage x:Name="msi" Grid.Row="1" Grid.Column="1" Source="./collection.xml" Canvas.ZIndex="0"/>-->
            <MultiScaleImage x:Name="msi" Grid.Row="1" Grid.Column="1" Source="C:/SmallDB/collection.xml" Canvas.ZIndex="0"/>

            
            
            
            
            <Canvas Grid.Row="1" Grid.Column="1" Canvas.ZIndex="10" >
                <Canvas Name="Overlays">
                    <Canvas.RenderTransform>
                        <ScaleTransform x:Name="OverlaysScale" ScaleX="1.0" ScaleY="1.0" />
                    </Canvas.RenderTransform>
                    <Canvas x:Name="BorderOverlay" Visibility="Visible" Canvas.Left="0" Canvas.Top="0"></Canvas>
                    <Canvas x:Name="GroupNamesOverlay" Visibility="Collapsed" Canvas.Left="0" Canvas.Top="0"></Canvas>
                </Canvas>
            </Canvas>
            <Canvas Name="Yaxis" Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch">
                <Canvas.RenderTransform>
                    <ScaleTransform x:Name="YaxisScale" ScaleX="1.0" ScaleY="1.0" />
                </Canvas.RenderTransform>
                <Canvas.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                        <GradientStop Color="#555" Offset="0"></GradientStop>
                        <GradientStop Color="#000" Offset="1"></GradientStop>
                    </LinearGradientBrush>
                </Canvas.Background>
                <Grid Name="YaxisGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <TextBlock Text="No" Foreground="White" Grid.Row="0"></TextBlock>
                    <TextBlock Text="Images" Foreground="White" Grid.Row="1"></TextBlock>
                </Grid>
            </Canvas>

            <Canvas Name="Xaxis" Grid.Row="2" Grid.Column="1">
                <Canvas.RenderTransform>
                    <ScaleTransform x:Name="XaxisScale" ScaleX="1.0" ScaleY="1.0" />
                </Canvas.RenderTransform>
                <Canvas.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#555" Offset="0"></GradientStop>
                        <GradientStop Color="#000" Offset="1"></GradientStop>
                    </LinearGradientBrush>
                </Canvas.Background>
                <Grid Name="XaxisGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="No" Foreground="White" Grid.Column="0" TextAlignment="Center"></TextBlock>
                    <TextBlock Text="Images" Foreground="White" Grid.Column="1" TextAlignment="Center"></TextBlock>
                </Grid>
            </Canvas>

            <Canvas x:Name="Mouse" Grid.Row="1" Grid.Column="1">
                <Border Background="White" Opacity="0.7">
                    <TextBlock x:Name="MouseTitle" FontSize="9" MaxWidth="250" TextWrapping="Wrap"></TextBlock>
                </Border>
            </Canvas>
            <Canvas  Grid.Row="1" Grid.Column="1" Height="37" HorizontalAlignment="Right" Margin="0,0,8,8" x:Name="buttonCanvas" VerticalAlignment="Bottom" Width="500" Opacity="0" Background="{x:Null}">
                <Button Height="30" x:Name="zoomIn" Width="42" Canvas.Left="197" Canvas.Top="4" Template="{StaticResource zoomInTemplate}" Content="Button" Click="ZoomInClick"/>
                <Button Height="30" x:Name="zoomOut" Width="42" Template="{StaticResource zoomOutTemplate}" Content="Button" Canvas.Left="227" Canvas.Top="4" Click="ZoomOutClick"/>
                <Button Height="30" x:Name="goHome" Width="42" Template="{StaticResource homeTemplate}" Content="Button" Canvas.Left="257" Canvas.Top="4" Click="GoHomeClick"/>
                <Button Height="30" x:Name="fullScreen" Width="42" Template="{StaticResource fullScreenTemplate}" Content="Button" Canvas.Left="287" Canvas.Top="4" Click="GoFullScreenClick"/>
            </Canvas>
        </Grid>
    </Grid>
</UserControl>
